// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Utilities;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace UtilitiesTests
{
    /// <summary>
    ///This is a test class for Utilities.SortedList&lt;T&gt; and is intended
    ///to contain all Utilities.SortedList&lt;T&gt; Unit Tests
    ///</summary>
    [TestClass()]
    public class SortedListTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for AddSorted (T)
        ///</summary>
        [TestMethod()]
        public void AddSortedTest()
        {
            SortedList<string> target = new SortedList<string>();
            target.Add("test1");
            target.Add("test2");
            Assert.AreEqual(2, target.Count);
        }

        /// <summary>
        ///A test for ModifySorted (T, int)
        ///</summary>
        [TestMethod()]
        public void ModifySortedTest()
        {
            SortedList<string> target = new SortedList<string>();
            target.Add("test1");
            target.Add("test2");
            target.ModifySorted("test0", 1);
            Assert.AreEqual("test0", target[0]);
        }
    }
}
